# Generated by Django 5.2 on 2025-04-09 08:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0002_initial'),
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('category', models.CharField(choices=[('general', 'General'), ('admin', 'Administrative'), ('finance', 'Finance'), ('hr', 'Human Resources'), ('marketing', 'Marketing'), ('operations', 'Operations'), ('planning', 'Planning'), ('research', 'Research'), ('sales', 'Sales'), ('other', 'Other')], default='general', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurring_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=20, null=True)),
                ('recurring_ends_on', models.DateField(blank=True, null=True)),
                ('visibility', models.CharField(choices=[('team', 'Team'), ('private', 'Private'), ('public', 'Public')], default='team', max_length=20)),
                ('acceptance_criteria', models.TextField(blank=True)),
                ('tags', models.CharField(blank=True, max_length=500)),
                ('notes', models.TextField(blank=True)),
                ('time_tracking_enabled', models.BooleanField(default=False)),
                ('budget_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('is_billable', models.BooleanField(default=False)),
                ('client_reference', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('delegation_notes', models.TextField(blank=True)),
                ('delegation_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_tasks', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='organizations.teammember')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('delegated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delegated_tasks', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='organizations.organization')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='projects.project')),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejected_tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tasks.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='task_attachments/')),
                ('filename', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='tasks.task')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('assigned', 'Assigned'), ('delegated', 'Delegated'), ('status_changed', 'Status Changed'), ('commented', 'Commented'), ('completed', 'Completed'), ('approved', 'Approved'), ('rejected', 'Rejected')], max_length=20)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='tasks.task')),
            ],
            options={
                'verbose_name_plural': 'Task Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TaskApprover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvers_through', to='tasks.task')),
                ('team_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approving_tasks_through', to='organizations.teammember')),
            ],
            options={
                'unique_together': {('task', 'team_member')},
            },
        ),
        migrations.CreateModel(
            name='TaskAssignee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignees_through', to='tasks.task')),
                ('team_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks_through', to='organizations.teammember')),
            ],
            options={
                'unique_together': {('task', 'team_member')},
            },
        ),
        migrations.CreateModel(
            name='TaskLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links_as_task1', to='tasks.task')),
                ('task2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links_as_task2', to='tasks.task')),
            ],
            options={
                'unique_together': {('task1', 'task2')},
            },
        ),
        migrations.CreateModel(
            name='TaskPrerequisite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prerequisite_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependent_tasks_through', to='tasks.task')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prerequisites_through', to='tasks.task')),
            ],
            options={
                'unique_together': {('task', 'prerequisite_task')},
            },
        ),
        migrations.CreateModel(
            name='TaskWatcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchers_through', to='tasks.task')),
                ('team_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watching_tasks_through', to='organizations.teammember')),
            ],
            options={
                'unique_together': {('task', 'team_member')},
            },
        ),
    ]
